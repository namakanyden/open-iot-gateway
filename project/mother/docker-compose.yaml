version: "3"

services:
  traefik:
    image: traefik:2.10
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # Configuration
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # Entrypoints
      - "--entrypoints.mqtt.address=:1883"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    restart: always
    ports:
      - 80:80 # The HTTP and HTTPS port
      - 443:443
      - 8080:8080 # The Web UI (enabled by --api.insecure=true)
      - 1883:1883 # MQTT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - homepage.group=Services
      - homepage.name=Traefik Dashboard
      - homepage.icon=traefik.png
      - homepage.href=http://${HOSTIP:-localhost}:8080/
      - homepage.description=Traefik dashboard

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    volumes:
      - ./configs/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    labels:
      traefik.enable: true
      traefik.http.routers.homepage.rule: PathPrefix(`/`)
      traefik.http.routers.homepage.entrypoints: web
      traefik.http.services.homepage.loadbalancer.server.port: 3000

  mosquitto:
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./configs/mosquitto:/mosquitto/config
    labels:
      traefik.enable: true
      traefik.tcp.services.mosquitto.loadbalancer.server.port: 1883
      traefik.tcp.routers.mosquitto.entrypoints: mqtt
      traefik.tcp.routers.mosquitto.service: mosquitto
      traefik.tcp.routers.mosquitto.rule: HostSNI(`*`)
      homepage.group: Services
      homepage.name: Mosquitto
      homepage.icon: mqtt.png
      homepage.description: Local MQTT Broker

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-unset}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-unset}
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana:/var/lib/grafana
    labels:
      homepage.group: Applications
      homepage.name: Grafana
      homepage.href: http://${HOSTIP:-localhost}/grafana/
      homepage.description: Dashboards
      homepage.icon: grafana.png

      traefik.enable: true
      traefik.http.routers.grafana.rule: PathPrefix(`/grafana`)
      traefik.http.routers.grafana.entrypoints: web
      traefik.http.services.grafana.loadbalancer.server.port: 3000

  influxdb:
    image: influxdb
    ports:
      - 8086:8086
    volumes:
      - influxdb:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER:-unset}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-unset}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-unset}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-unset}
    labels:
      homepage.group: Services
      homepage.name: InfluxDB
      homepage.description: Time-Series Database.
      homepage.icon: influxdb.png
      homepage.href: http://${HOSTIP:-localhost}:8086

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    labels:
      homepage.group: Services
      homepage.name: Watchtower
      homepage.icon: https://containrrr.dev/watchtower/images/logo-450px.png
      homepage.description: Automates Docker container base image updates.

  telegraf:
    image: telegraf
    restart: always
    volumes:
      - ./configs/telegraf:/etc/telegraf:ro
    environment:
      MQTT_USERNAME: ${MQTT_USERNAME:-unset}
      MQTT_PASSWORD: ${MQTT_PASSWORD:-unset}
      INFLUXDB_WRITE_TOKEN: ${INFLUXDB_WRITE_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET_METRICS: ${INFLUXDB_BUCKET_METRICS}
    labels:
      homepage.group: Services
      homepage.name: Telegraf
      homepage.icon: telegraf.png
      homepage.description: System Metrics to InfluxDB

volumes:
  grafana:
  influxdb:
  portainer_data:

networks:
  # all containers will be by default connected to network iotgw
  default:
    name: motherNetwork
    external: true
