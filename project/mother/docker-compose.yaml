services:

  provisioning:
    build:
      context: provisioning
    restart: no
    environment:
      - TZ=UTC
      - HOSTIP=${HOSTIP:-localhost}
      - MOSQUITTO_USER=${MOSQUITTO_USER}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
      - DEBUG_PROVISIONING=${DEBUG_PROVISIONING}

      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_USER_PASSWORD=${INFLUXDB_ADMIN_USER_PASSWORD}
      - INFLUXDB_ADMIN_USER_TOKEN=${INFLUXDB_ADMIN_USER_TOKEN}
      - INFLUXDB_ADMIN_ORG=${INFLUXDB_ADMIN_ORG}
    volumes:
      - homepage_images:/mnt/homepage/images/
      - homepage_config:/mnt/homepage/config/
      - telegraf_config:/mnt/telegraf/
      - mosquitto_config:/mnt/mosquitto/
      - mqttexplorer_config:/mnt/mqttexplorer/
      - influxdb_init:/mnt/influxdb/
      # - nodered_data:/mnt/nodered/


  traefik:
    image: traefik:2.11
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # Configuration
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # Entrypoints
      - "--entrypoints.mqtt.address=:1883"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    restart: always
    ports:
      - 80:80 # The HTTP and HTTPS port
      - 443:443
      - 8080:8080 # The Web UI (enabled by --api.insecure=true)
      - 1883:1883 # MQTT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - homepage.group=Services
      - homepage.name=Traefik Dashboard
      - homepage.icon=traefik.png
      - homepage.href=http://${HOSTIP:-localhost}:8080/
      - homepage.description=Traefik dashboard


  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    volumes:
      - homepage_config:/app/config
      - homepage_images:/app/public/images
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    depends_on:
    - provisioning
    - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.homepage.rule: PathPrefix(`/`)
      traefik.http.routers.homepage.entrypoints: web
      traefik.http.services.homepage.loadbalancer.server.port: 3000
      homepage.group: Services
      homepage.name: Homepage
      homepage.icon: homepage.png
      homepage.description: Application Dashboard


  portainer:
    image: portainer/portainer-ce
    ports:
      # - 8000:8000
      - 9443:9443
    restart: always
    depends_on:
      - homepage
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    labels:
      homepage.group: Applications
      homepage.name: Portainer
      homepage.icon: portainer.png
      homepage.href: https://${HOSTIP:-localhost}:9443/
      homepage.description: Docker management

      #traefik.enable: true
      #traefik.http.services.portainer.loadbalancer.server.port: 9443

      ## middleware
      #traefik.http.middlewares.portainer-rewrite.replacepathregex.regex: "^/portainer/(.*)"
      #traefik.http.middlewares.portainer-rewrite.replacepathregex.replacement: "/$$1"

      ## routers
      #traefik.http.routers.portainer.entrypoints: web
      #traefik.http.routers.portainer.rule: PathPrefix(`/portainer/`)
      #traefik.http.routers.portainer.middlewares: "portainer-rewrite"


  mosquitto:
    image: eclipse-mosquitto
    restart: always
    volumes:
      - mosquitto_config:/mosquitto/config
    # ports:
    #   - 8000:8000 # for websocket
    depends_on:
      - provisioning
      - traefik
      - homepage
    labels:
      traefik.enable: true
      traefik.tcp.services.mosquitto.loadbalancer.server.port: 1883
      traefik.tcp.routers.mosquitto.entrypoints: mqtt
      traefik.tcp.routers.mosquitto.service: mosquitto
      traefik.tcp.routers.mosquitto.rule: HostSNI(`*`)
      #      traefik.tcp.services.mosquitto_ws.loadbalancer.server.port: 8000
      #      traefik.tcp.routers.mosquitto_ws.entrypoints: ws
      #      traefik.tcp.routers.mosquitto_ws.service: mosquitto
      #      traefik.tcp.routers.mosquitto_ws.rule: HostSNI(`*`)
      homepage.group: Services
      homepage.name: Mosquitto
      homepage.icon: mqtt.png
      homepage.description: Local MQTT Broker


#   grafana:
#     image: grafana/grafana
#     environment:
#       - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-unset}
#       - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-unset}
#       - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
#       - GF_SERVER_SERVE_FROM_SUB_PATH=true
#     volumes:
#       - grafana:/var/lib/grafana
#     labels:
#       homepage.group: Applications
#       homepage.name: Grafana
#       homepage.href: http://${HOSTIP:-localhost}/grafana/
#       homepage.description: Dashboards
#       homepage.icon: grafana.png

#       traefik.enable: true
#       traefik.http.routers.grafana.rule: PathPrefix(`/grafana`)
#       traefik.http.routers.grafana.entrypoints: web
#       traefik.http.services.grafana.loadbalancer.server.port: 3000


  influxdb:
    image: bitnami/influxdb:2.7.6
    ports:
      - 8086:8086
    volumes:
      - influxdb:/bitnami/influxdb/
      - influxdb_init:/docker-entrypoint-initdb.d/
    depends_on:
      - provisioning
      - homepage
    environment:
      - INFLUXDB_INIT_MODE=setup
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_USER_PASSWORD=${INFLUXDB_ADMIN_USER_PASSWORD}
      - INFLUXDB_ADMIN_USER_TOKEN=${INFLUXDB_ADMIN_USER_TOKEN}
      - INFLUXDB_ADMIN_ORG=${INFLUXDB_ADMIN_ORG}
      # - INFLUXDB_ADMIN_BUCKET=${INFLUXDB_BUCKET:-unset}

      # - INFLUXDB_USER=${INFLUXDB_USER:-maker}
      # - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}

      # - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER:-unset}
      # - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-unset}
      # - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-unset}
      # - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-unset}
    labels:
      homepage.group: Services
      homepage.name: InfluxDB
      homepage.description: Time-Series Database.
      homepage.icon: influxdb.png
      homepage.href: http://${HOSTIP:-localhost}:8086


#   telegraf-processor:
#     build:
#       context: ./configs/telegraf-processor
#     restart: always
#     volumes:
#       - ./configs/telegraf-processor:/etc/telegraf:ro
#       - ./configs/telegraf-processor/processor/src:/app/bin
#       - ./configs/tmp/:/tmp/
#     environment:
#       MQTT_USERNAME: ${MQTT_USERNAME:-unset}
#       MQTT_PASSWORD: ${MQTT_PASSWORD:-unset}
#       INFLUXDB_WRITE_TOKEN: ${INFLUXDB_WRITE_TOKEN}
#       INFLUXDB_ORG: ${INFLUXDB_ORG}
#       INFLUXDB_BUCKET_METRICS: ${INFLUXDB_BUCKET_METRICS}
#     labels:
#       homepage.group: Services
#       homepage.name: Telegraf Processor
#       homepage.icon: telegraf.png
#       homepage.description: Measured values to InfluxDB


#   telegraf-metrics:
#     image: telegraf
#     restart: always
#     volumes:
#       - ./configs/telegraf-metrics:/etc/telegraf:ro
#       - ./configs/tmp/:/tmp/
        # - telegraf_config:/etc/telegraf:ro
#     environment:
#       MQTT_USERNAME: ${MQTT_USERNAME:-unset}
#       MQTT_PASSWORD: ${MQTT_PASSWORD:-unset}
#       INFLUXDB_WRITE_TOKEN: ${INFLUXDB_WRITE_TOKEN}
#       INFLUXDB_ORG: ${INFLUXDB_ORG}
#       INFLUXDB_BUCKET_METRICS: ${INFLUXDB_BUCKET_METRICS}
#     labels:
#       homepage.group: Services
#       homepage.name: Telegraf Metrics
#       homepage.icon: telegraf.png
#       homepage.description: System Metrics to InfluxDB

  mqtt-explorer:
    image: smeagolworms4/mqtt-explorer
    restart: always
    volumes:
      - ./configs/mqtt-explorer:/mqtt-explorer/config
    depends_on:
      - provisioning
      - mosquitto
      - homepage
    labels:
      # homepage setup
      homepage.group: Applications
      homepage.name: MQTT Explorer
      homepage.href: http://${HOSTIP:-localhost}/mqttexplorer/
      homepage.description: MQTT Web Client
      homepage.icon: http://mqtt-explorer.com/icon.png

      # traefik setup
      traefik.enable: true
      traefik.http.services.mqttex.loadbalancer.server.port: 4000

      # middleware
      traefik.http.middlewares.mqttex-rewrite.replacepathregex.regex: "^/mqttexplorer/(.*)"
      traefik.http.middlewares.mqttex-rewrite.replacepathregex.replacement: "/$$1"

      # routers
      traefik.http.routers.mqttex.entrypoints: web
      traefik.http.routers.mqttex.rule: PathPrefix(`/mqttexplorer/`)
      traefik.http.routers.mqttex.middlewares: "mqttex-rewrite"

  # homeassistant:

#   mqttwarn:
#     image: tomhoover/mqttwarn
#     restart: always
#     volumes:
#       - ./configs/mqttwarn:/mqttwarn/config
#     labels:
#       # homepage setup
#       homepage.group: Applications
#       homepage.name: MQTT-warn
#       homepage.description: MQTT to Webhooks
#       homepage.icon: mqttwarn.png

volumes:
  grafana:
  portainer:
  telegraf_config:
  homepage_config:
  homepage_images:
  mosquitto_config:
  mqttexplorer_config:
  influxdb:
  influxdb_init:
