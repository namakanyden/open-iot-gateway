services:
  provisioning:
    build:
      context: provisioning
    restart: no
    env_file:
      - .env
    volumes:
      - zigbee2mqtt_data:/mnt/zigbee2mqtt/
      - mosquitto_config:/mnt/mosquitto/
      - homepage_config:/mnt/homepage/config/
      - homepage_images:/mnt/homepage/images/
      - theengs_config:/mnt/theengs/
      - nodered_data:/mnt/nodered/
      - telegraf_config:/mnt/telegraf/
      - mqttexplorer_config:/mnt/mqttexplorer
      # - /var/run/docker.sock:/var/run/docker.sock
    # labels:
    #   io.resin.features.balena-socket: "1"
    #   io.balena.features.dbus: "1"


  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    volumes:
      - homepage_config:/app/config
      - homepage_images:/app/public/images
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    ports:
      - 80:3000
    depends_on:
      - provisioning
    labels:
      homepage.group: IoT Gateway Core
      homepage.name: Homepage
      homepage.icon: homepage.png
      homepage.description: Application dashboard.
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M


  mosquitto:
    image: eclipse-mosquitto:2.0
    restart: always
    volumes:
      - mosquitto_config:/mosquitto/config:ro
    depends_on:
      - provisioning
    ports:
      - 1883:1883
    labels:
      homepage.group: IoT Gateway Core
      homepage.name: Mosquitto
      homepage.icon: eclipse-mosquitto.png
      homepage.description: Local MQTT Broker.
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 50M
        reservations:
          cpus: '0.1'
          memory: 10M


  telegraf:
    image: telegraf:1.31-alpine
    restart: always
    depends_on:
      - provisioning
      - mosquitto
    user: telegraf:973
    volumes:
      - telegraf_config:/etc/telegraf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    #       - /:/hostfs:ro
    #       - HOST_ETC=/hostfs/etc
    #       - HOST_PROC=/hostfs/proc
    #       - HOST_SYS=/hostfs/sys
    #       - HOST_VAR=/hostfs/var
    #       - HOST_RUN=/hostfs/run
    #       - HOST_MOUNT_PREFIX=/hostfs
    labels:
      homepage.group: IoT Gateway Core
      homepage.name: Telegraf
      homepage.icon: telegraf.png
      homepage.description: System Metrics Collector.
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 150M
        reservations:
          cpus: '0.1'
          memory: 30M


  theengs:
    image: theengs/gateway:latest
    restart: always
    depends_on:
      - provisioning
      - mosquitto
    volumes:
      - theengs_config:/root/
    environment:
      UDEV: 1
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    working_dir: /opt/venv
    command: /bin/bash -ec "source bin/activate && python3 -m TheengsGateway"
    labels:
      homepage.group: IoT Gateway Core
      homepage.name: Theengs
      homepage.icon: /images/theengs.png
      homepage.description: BLE2MQTT Gateway.


  chrony:
    image: cturra/ntp:latest
    restart: always
    ports:
      - 123:123/udp
    # environment:
    #   LOG_LEVEL: 0
    labels:
      homepage.group: IoT Gateway Core
      homepage.name: Chrony
      homepage.icon: /images/chrony.png
      homepage.description: NTP Server.


  nodered:
    container_name: nodered
    image: nodered/node-red:4.0.0-minimal
    restart: always
    ports:
      - 1880:1880
    volumes:
      - nodered_data:/data
    depends_on:
      - provisioning
      - mosquitto
    entrypoint: /data/entrypoint.sh
    # labels:
    #   homepage.group: Services
    #   homepage.name: Node-RED
    #   homepage.icon: node-red.png
    #   homepage.description: Low-code programmer.


  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:1.38.0
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - provisioning
      - mosquitto
    privileged: true
    volumes:
      - zigbee2mqtt_data:/app/data/
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    # labels:
    #   homepage.group: Services
    #   homepage.name: Zigbee2MQTT
    #   homepage.icon: zigbee2mqtt.png
    #   homepage.description: Zigbee2MQTT Bridge.


  watchtower:
      image: containrrr/watchtower:1.7.1
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      restart: always
      command: --schedule "0 0 4 * * *"  # at 04:00:00
      labels:
        homepage.group: IoT Gateway Core
        homepage.name: Watchtower
        homepage.icon: /images/watchtower.png
        homepage.description: Automates Docker container base image updates.


  mqttexplorer:
    image: smeagolworms4/mqtt-explorer:master
    ports:
    - 4000:4000
    restart: always
    environment:
    - INITIAL_CONFIG={}
    volumes:
    - mqttexplorer_config:/mqtt-explorer/config
    depends_on:
      - provisioning
      - mosquitto
    labels:
        homepage.group: Applications
        homepage.name: MQTT Explorer
        homepage.icon: /images/mqttexplorer.png
        homepage.description: Comprehensive MQTT client.
        homepage.href: http://localhost:4000


  # wifi-repeater:
  #   build: wifi-repeater
  #   privileged: true
  #   depends_on:
  #   - provisioning
  #   labels:
  #     io.balena.features.dbus: "1"

volumes:
  nodered_data:
  zigbee2mqtt_data:
  mosquitto_config:
  homepage_config:
  homepage_images:
  theengs_config:
  telegraf_config:
  mqttexplorer_config:
