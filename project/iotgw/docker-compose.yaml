version: "2.4"

services:
  provisioning:
    build:
      context: provisioning
    restart: no
    # env_file:
      # - .env
    volumes:
      - zigbee2mqtt_data:/mnt/zigbee2mqtt/
      - mosquitto_config:/mnt/mosquitto/
      - homepage_config:/mnt/homepage/config/
      - homepage_images:/mnt/homepage/images/
      - theengs_config:/mnt/theengs/
      - nodered_data:/mnt/nodered/
      - telegraf_config:/mnt/telegraf/
      - chaos_config:/mnt/chaos/
    labels:
      io.resin.features.balena-socket: "1"

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    volumes:
      - homepage_config:/app/config
      - homepage_images:/app/public/images
    # - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    ports:
      - 80:3000
    depends_on:
      - provisioning
    labels:
      io.balena.features.balena-socket: "1"

  mosquitto:
    image: eclipse-mosquitto
    restart: always
    volumes:
      - mosquitto_config:/mosquitto/config:ro
    depends_on:
      - provisioning
    ports:
      - 1883:1883

  telegraf:
    image: telegraf:alpine
    restart: always
    depends_on:
      - provisioning
      - mosquitto
    user: telegraf:991
    volumes:
      - telegraf_config:/etc/telegraf:ro
      # - /var/run/docker.sock:/var/run/docker.sock
    #       - /:/hostfs:ro
    #       - HOST_ETC=/hostfs/etc
    #       - HOST_PROC=/hostfs/proc
    #       - HOST_SYS=/hostfs/sys
    #       - HOST_VAR=/hostfs/var
    #       - HOST_RUN=/hostfs/run
    #       - HOST_MOUNT_PREFIX=/hostfs
    labels:
      io.resin.features.balena-socket: "1"

  theengs:
    image: theengs/gateway
    restart: always
    depends_on:
      - provisioning
      - mosquitto
    volumes:
      - theengs_config:/root/
    environment:
      UDEV: 1
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    labels:
      io.balena.features.dbus: 1
    working_dir: /opt/venv
    command: /bin/bash -ec "source bin/activate && python3 -m TheengsGateway"

  chrony:
    image: cturra/ntp
    restart: always
    ports:
      - 123:123/udp
    # environment:
    #   LOG_LEVEL: 0


  nodered:
    image: nodered/node-red:latest-minimal
    restart: always
    ports:
      - 1880:1880
    volumes:
      - nodered_data:/data
    depends_on:
      - provisioning
      - mosquitto
    # labels:
    #   io.balena.features.supervisor-api: 1
    entrypoint: /data/entrypoint.sh

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - provisioning
      - mosquitto
    privileged: true
    volumes:
      - zigbee2mqtt_data:/app/data/
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    labels:
      io.balena.features.dbus: 1

  chaos:
    build: ./chaos
    privileged: true
    depends_on:
      - provisioning
      - mosquitto
    environment:
      - 'DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket'
      - 'UDEV=on'
      - 'INITSYSTEM=on'
    labels:
      io.balena.features.dbus: '1'
    network_mode: host
      


#   watchtower:
  #     image: containrrr/watchtower
  #     volumes:
  #       - /var/run/docker.sock:/var/run/docker.sock
  #     restart: always
  #     labels:
  #       homepage.group: IoT Gateway Core
  #       homepage.name: Watchtower
  #       homepage.icon: /images/watchtower.png
  #       homepage.description: Automates Docker container base image updates.


volumes:
  nodered_data:
  zigbee2mqtt_data:
  mosquitto_config:
  homepage_config:
  homepage_images:
  theengs_config:
  telegraf_config:
  chaos_config:
